name: "Check Pull Request Readiness"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  pr-name-check:
    name: PR name check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 10
    env:
      PR_NAME: ${{ github.event.pull_request.title }}
      PR_AUTHOR: ${{ github.actor }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./venv/
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          bash automation/venv_setup.sh
      - name: PR name check
        run: |
          echo "Pull Request Name is $PR_NAME"
          python automation/check_pr_name.py --pr-name="$PR_NAME" --pr-author="$PR_AUTHOR"

  spellcheck:
    name: Spellcheck
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@master
      - name: Install Aspell
        run: |
          sudo apt-get install aspell aspell-en aspell-ru
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./venv/
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          bash automation/venv_setup.sh
      - name: Spell check
        run: |
          bash automation/spellcheck/run_spellcheck.sh

  unittests:
    name: Unittests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./venv/
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          bash automation/venv_setup.sh
      - name: Unittests
        run: |
          bash automation/run_tests.sh
